name: DB Tests CI

on:
  workflow_dispatch:

env:
  MAVEN_ARGS: "-B -nsu -Daether.connector.http.connectionMaxTtl=25"
  SUREFIRE_RERUN_FAILING_COUNT: 2
  SUREFIRE_RETRY: "-Dsurefire.rerunFailingTestsCount=2"

concurrency:
  # Only cancel jobs for PR updates
  group: ci-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  conditional:
    name: Check conditional workflows and jobs
    runs-on: ubuntu-latest
    outputs:
      ci: ${{ steps.conditional.outputs.ci }}
      ci-quarkus: ${{ steps.conditional.outputs.ci-quarkus }}
      ci-store: ${{ steps.conditional.outputs.ci-store }}
      ci-sssd: ${{ steps.conditional.outputs.ci-sssd }}
      ci-webauthn: ${{ steps.conditional.outputs.ci-webauthn }}
      ci-aurora: ${{ steps.auroradb-tests.outputs.run-aurora-tests }}
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - id: conditional
        uses: ./.github/actions/conditional
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: AuroraDB conditional check
        id: auroradb-tests
        run: |
          RUN_AURORADB_TESTS=false
          if [[ $GITHUB_EVENT_NAME != "pull_request" && -n "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]]; then
            RUN_AURORADB_TESTS=true
          fi
          echo "run-aurora-tests=$RUN_AURORADB_TESTS" >> $GITHUB_OUTPUT


  build:
    name: Build
    if: needs.conditional.outputs.ci == 'true'
    runs-on: ubuntu-latest
    needs: conditional
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Build Keycloak
        uses: ./.github/actions/build-keycloak

      - name: Check for unstaged proto.lock files
        if: github.event_name == 'pull_request' && startsWith(github.event.pull_request.base.ref, 'release/')
        run: git diff --name-only --exit-code -- "**/proto.lock"

  store-integration-tests:
    name: Store IT
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 75
    strategy:
      matrix:
        db: [tidb]
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - name: Run new base tests
        run: |
          KC_TEST_DATABASE=${{ matrix.db }} KC_TEST_DATABASE_REUSE=true TESTCONTAINERS_REUSE_ENABLE=true ./mvnw package -f tests/pom.xml -Dtest=DatabaseTestSuite -Dkeycloak.distribution.start.timeout=360

      - name: Database container port
        run: |
          # The Ryuk container process exists temporarily after the JVM terminates, wait for only the database container to remain
          while [ "$(docker ps -q | wc -l)" -ne 1 ]; do
            docker ps
            sleep 10
          done
          docker ps -l
          DATABASE_PORT=$(docker ps -l --format '{{ .ID }}' | xargs docker port | cut -d ':' -f 2)
          echo "DATABASE_PORT=$DATABASE_PORT"
          echo "DATABASE_PORT=$DATABASE_PORT" >> $GITHUB_ENV

      - name: Run base tests
        run: |
          TESTS=`testsuite/integration-arquillian/tests/base/testsuites/suite.sh database`
          echo "Tests: $TESTS"
          ./mvnw test ${{ env.SUREFIRE_RETRY }} \
            -Pauth-server-quarkus -Pdb-${{ matrix.db }} \
            "-Dwebdriver.chrome.driver=$CHROMEWEBDRIVER/chromedriver" \
            -Dtest=$TESTS \
            -Ddocker.database.skip=true \
            -Ddocker.database.port=$DATABASE_PORT \
            -Ddocker.container.testdb.ip=localhost \
            -Dkeycloak.distribution.start.timeout=360 \
            -pl testsuite/integration-arquillian/tests/base 2>&1 | misc/log/trimmer.sh

      - name: Run cluster JDBC_PING2 UDP smoke test
        run: |
          ./mvnw test ${{ env.SUREFIRE_RETRY }} \
            -Pauth-server-cluster-quarkus \
            -Pdb-${{ matrix.db }} \
            -Dtest=RealmInvalidationClusterTest \
            -Dsession.cache.owners=2 \
            -Dauth.server.quarkus.cluster.stack=jdbc-ping-udp \
            -Ddocker.database.skip=true \
            -Ddocker.database.port=$DATABASE_PORT \
            -Ddocker.container.testdb.ip=localhost \
            -pl testsuite/integration-arquillian/tests/base \
            2>&1 | misc/log/trimmer.sh

      - name: Run cluster JDBC_PING2 TCP smoke test
        run: |
          ./mvnw test ${{ env.SUREFIRE_RETRY }} \
            -Pauth-server-cluster-quarkus \
            -Pdb-${{ matrix.db }} \
            -Dtest=RealmInvalidationClusterTest \
            -Dsession.cache.owners=2 \
            -Dauth.server.quarkus.cluster.stack=jdbc-ping \
            -Ddocker.database.skip=true \
            -Ddocker.database.port=$DATABASE_PORT \
            -Ddocker.container.testdb.ip=localhost \
            -pl testsuite/integration-arquillian/tests/base \
            2>&1 | misc/log/trimmer.sh

      - name: Upload JVM Heapdumps
        if: always()
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Store IT

      - name: Surefire reports
        if: always()
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: store-integration-tests-${{ matrix.db }}

  migration-tests:
    name: Migration Tests
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 45
    strategy:
      matrix:
        old-version: [24.0.4]
        database: [tidb]
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - id: integration-test-setup
        name: Integration test setup
        uses: ./.github/actions/integration-test-setup

      - name: Run Migration Tests
        run: |
          ./mvnw clean install ${{ env.SUREFIRE_RETRY }} \
          -Pauth-server-quarkus -Pdb-${{ matrix.database }} -Pauth-server-migration \
          -Dtest=MigrationTest \
          -Dmigration.mode=auto \
          -Dmigrated.auth.server.version=${{ matrix.old-version }} \
          -Dmigration.import.file.name=migration-realm-${{ matrix.old-version }}.json \
          -Dauth.server.ssl.required=false \
          -Dauth.server.db.host=localhost \
          "-Dwebdriver.chrome.driver=$CHROMEWEBDRIVER/chromedriver" \
          -f testsuite/integration-arquillian/pom.xml 2>&1 | misc/log/trimmer.sh

      - name: Upload JVM Heapdumps
        if: always()
        uses: ./.github/actions/upload-heapdumps

      - uses: ./.github/actions/upload-flaky-tests
        name: Upload flaky tests
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          job-name: Migration Tests

      - name: Surefire reports
        if: always()
        uses: ./.github/actions/archive-surefire-reports
        with:
          job-id: migration-tests-${{ matrix.old-version }}-${{ matrix.database }}

  check:
    name: Status Check - Keycloak CI
    if: always()
    needs:
      - conditional
      - build
      - store-integration-tests
      - migration-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/status-check
        with:
          jobs: ${{ toJSON(needs) }}
